{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../api.service\";\nexport class Comp1Component {\n  constructor(api) {\n    this.api = api;\n    this.subjects = '';\n  }\n\n  ngOnInit() {\n    The;\n    subject;\n    is;\n    observable.It;\n    must;\n    have;\n    the;\n    ability;\n    to;\n    emit;\n    a;\n    stream;\n    of;\n    values;\n    The;\n    previous;\n    example;\n    shows, we;\n    can;\n    use;\n    the;\n    next;\n    method;\n    to;\n    emit;\n    values;\n    into;\n    the;\n    stream.this.api.subject$.next(\"Hi ,I am Subject\"); // BehaviorSubject requires an initial value and stores the current value\n    // and emits it to the new subscribers.\n\n    this.api.behaviorSubject$.next(1);\n    this.api.behaviorSubject$.complete();\n    this.api.behaviorSubject$.error(\"error\"); // ReplaySubject replays old values to new subscribers\n    // when they first subscribe.\n\n    this.api.replaySubject$.next(\"Welcome, This is ReplaySubject\"); // AsyncSubject only emits the latest value only when it completes.\n    // If it errors out then it will emit an error, but will not emit any values.\n\n    this.api.asyncSubject$.next(\"Welcome, This is AsyncSubject\");\n    this.api.asyncSubject$.complete();\n  }\n\n}\n\nComp1Component.ɵfac = function Comp1Component_Factory(t) {\n  return new (t || Comp1Component)(i0.ɵɵdirectiveInject(i1.ApiService));\n};\n\nComp1Component.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: Comp1Component,\n  selectors: [[\"app-comp1\"]],\n  decls: 0,\n  vars: 0,\n  template: function Comp1Component_Template(rf, ctx) {},\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjb21wMS5jb21wb25lbnQuY3NzIn0= */\"]\n});","map":{"version":3,"sources":["/home/knoldus/projecttry/src/app/component/comp1/comp1.component.ts"],"names":["i0","i1","Comp1Component","constructor","api","subjects","ngOnInit","The","subject","is","observable","It","must","have","the","ability","to","emit","a","stream","of","values","previous","example","shows","we","can","use","next","method","into","this","subject$","behaviorSubject$","complete","error","replaySubject$","asyncSubject$","ɵfac","Comp1Component_Factory","t","ɵɵdirectiveInject","ApiService","ɵcmp","ɵɵdefineComponent","type","selectors","decls","vars","template","Comp1Component_Template","rf","ctx","styles"],"mappings":"AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,mBAApB;AACA,OAAO,MAAMC,cAAN,CAAqB;AACxBC,EAAAA,WAAW,CAACC,GAAD,EAAM;AACb,SAAKA,GAAL,GAAWA,GAAX;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACH;;AACDC,EAAAA,QAAQ,GAAG;AACPC,IAAAA,GAAG;AACHC,IAAAA,OAAO;AACPC,IAAAA,EAAE;AACFC,IAAAA,UAAU,CAACC,EAAX;AACAC,IAAAA,IAAI;AACJC,IAAAA,IAAI;AACJC,IAAAA,GAAG;AACHC,IAAAA,OAAO;AACPC,IAAAA,EAAE;AACFC,IAAAA,IAAI;AACJC,IAAAA,CAAC;AACDC,IAAAA,MAAM;AACNC,IAAAA,EAAE;AACFC,IAAAA,MAAM;AACNd,IAAAA,GAAG;AACHe,IAAAA,QAAQ;AACRC,IAAAA,OAAO;AACPC,IAAAA,KAAK,EAAEC,EAAP;AACAC,IAAAA,GAAG;AACHC,IAAAA,GAAG;AACHb,IAAAA,GAAG;AACHc,IAAAA,IAAI;AACJC,IAAAA,MAAM;AACNb,IAAAA,EAAE;AACFC,IAAAA,IAAI;AACJI,IAAAA,MAAM;AACNS,IAAAA,IAAI;AACJhB,IAAAA,GAAG;AACHK,IAAAA,MAAM,CACFY,IADJ,CACS3B,GADT,CACa4B,QADb,CACsBJ,IADtB,CAC2B,kBAD3B,EA7BO,CA+BP;AACA;;AACA,SAAKxB,GAAL,CAAS6B,gBAAT,CAA0BL,IAA1B,CAA+B,CAA/B;AACA,SAAKxB,GAAL,CAAS6B,gBAAT,CAA0BC,QAA1B;AACA,SAAK9B,GAAL,CAAS6B,gBAAT,CAA0BE,KAA1B,CAAgC,OAAhC,EAnCO,CAoCP;AACA;;AACA,SAAK/B,GAAL,CAASgC,cAAT,CAAwBR,IAAxB,CAA6B,gCAA7B,EAtCO,CAuCP;AACA;;AACA,SAAKxB,GAAL,CAASiC,aAAT,CAAuBT,IAAvB,CAA4B,+BAA5B;AACA,SAAKxB,GAAL,CAASiC,aAAT,CAAuBH,QAAvB;AACH;;AAhDuB;;AAkD5BhC,cAAc,CAACoC,IAAf,GAAsB,SAASC,sBAAT,CAAgCC,CAAhC,EAAmC;AAAE,SAAO,KAAKA,CAAC,IAAItC,cAAV,EAA0BF,EAAE,CAACyC,iBAAH,CAAqBxC,EAAE,CAACyC,UAAxB,CAA1B,CAAP;AAAwE,CAAnI;;AACAxC,cAAc,CAACyC,IAAf,GAAsB,aAAc3C,EAAE,CAAC4C,iBAAH,CAAqB;AAAEC,EAAAA,IAAI,EAAE3C,cAAR;AAAwB4C,EAAAA,SAAS,EAAE,CAAC,CAAC,WAAD,CAAD,CAAnC;AAAoDC,EAAAA,KAAK,EAAE,CAA3D;AAA8DC,EAAAA,IAAI,EAAE,CAApE;AAAuEC,EAAAA,QAAQ,EAAE,SAASC,uBAAT,CAAiCC,EAAjC,EAAqCC,GAArC,EAA0C,CAAG,CAA9H;AAAgIC,EAAAA,MAAM,EAAE,CAAC,qKAAD;AAAxI,CAArB,CAApC","sourcesContent":["import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../api.service\";\nexport class Comp1Component {\n    constructor(api) {\n        this.api = api;\n        this.subjects = '';\n    }\n    ngOnInit() {\n        The;\n        subject;\n        is;\n        observable.It;\n        must;\n        have;\n        the;\n        ability;\n        to;\n        emit;\n        a;\n        stream;\n        of;\n        values;\n        The;\n        previous;\n        example;\n        shows, we;\n        can;\n        use;\n        the;\n        next;\n        method;\n        to;\n        emit;\n        values;\n        into;\n        the;\n        stream.\n            this.api.subject$.next(\"Hi ,I am Subject\");\n        // BehaviorSubject requires an initial value and stores the current value\n        // and emits it to the new subscribers.\n        this.api.behaviorSubject$.next(1);\n        this.api.behaviorSubject$.complete();\n        this.api.behaviorSubject$.error(\"error\");\n        // ReplaySubject replays old values to new subscribers\n        // when they first subscribe.\n        this.api.replaySubject$.next(\"Welcome, This is ReplaySubject\");\n        // AsyncSubject only emits the latest value only when it completes.\n        // If it errors out then it will emit an error, but will not emit any values.\n        this.api.asyncSubject$.next(\"Welcome, This is AsyncSubject\");\n        this.api.asyncSubject$.complete();\n    }\n}\nComp1Component.ɵfac = function Comp1Component_Factory(t) { return new (t || Comp1Component)(i0.ɵɵdirectiveInject(i1.ApiService)); };\nComp1Component.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: Comp1Component, selectors: [[\"app-comp1\"]], decls: 0, vars: 0, template: function Comp1Component_Template(rf, ctx) { }, styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjb21wMS5jb21wb25lbnQuY3NzIn0= */\"] });\n"]},"metadata":{},"sourceType":"module"}